#!/usr/bin/env python
#!-*-coding:utf8 -*-
import os
import time
import serial
ser = serial.Serial('/dev/ttyUSB3',9600,8,'N',2,timeout = 1)
#ser.write("1234")
tx = [0]*201
rx = [0]*30
dd = [0]*28
save_data_sec4 = []

A = [0x0A for i in range(0,64)]
B = [0x0A for i in range(0,64)]
C = [0x0A for i in range(0,64)]
D = [0x0A for i in range(0,64)]
char_data = [A,B,C,D] #地址数据
##############################
#先发送0123456789: //的点阵库#
##############################
file_buffer = [
#	/*01   C3031 */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xF8,0x00,0x00,
0x00,0x00,0x3F,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0xFF,0x80,0x00,0xFF,0x80,0x00,
0x00,0x03,0xF0,0x00,0x00,0x07,0xE0,0x00,0x00,0x07,0x80,0x00,0x00,0x00,0xF0,0x00,
0x00,0x0E,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,0x18,0x00,
0x00,0x18,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x04,0x00,
0x00,0x30,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x06,0x00,
0x00,0x30,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x06,0x00,
0x00,0x10,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x0C,0x00,
0x00,0x0C,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x0E,0x00,0x00,0x00,0x00,0x38,0x00,
0x00,0x07,0x80,0x00,0x00,0x00,0xF0,0x00,0x00,0x01,0xF0,0x00,0x00,0x07,0xC0,0x00,
0x00,0x00,0xFF,0xC0,0x01,0xFF,0x80,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFE,0x00,0x00,
0x00,0x00,0x07,0xFF,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x0C,0x00,
0x00,0x03,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x0C,0x00,
0x00,0x03,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x1C,0x00,
0x00,0x07,0x80,0x00,0x00,0x00,0x3C,0x00,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFC,0x00,
0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFC,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

#/*23   C3233 */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0xFC,0x00,
0x00,0x01,0xFF,0x80,0x00,0x01,0x3C,0x00,0x00,0x03,0x1F,0x80,0x00,0x02,0x3C,0x00,
0x00,0x04,0x07,0x00,0x00,0x0C,0x3C,0x00,0x00,0x0C,0x00,0x00,0x00,0x18,0x3C,0x00,
0x00,0x08,0x00,0x00,0x00,0x20,0x3C,0x00,0x00,0x10,0x00,0x00,0x00,0x40,0x3C,0x00,
0x00,0x10,0x00,0x00,0x00,0x80,0x3C,0x00,0x00,0x30,0x00,0x00,0x01,0x00,0x3C,0x00,
0x00,0x30,0x00,0x00,0x02,0x00,0x3C,0x00,0x00,0x30,0x00,0x00,0x04,0x00,0x3C,0x00,
0x00,0x30,0x00,0x00,0x08,0x00,0x3C,0x00,0x00,0x30,0x00,0x00,0x10,0x00,0x3C,0x00,
0x00,0x30,0x00,0x00,0x60,0x00,0x3C,0x00,0x00,0x18,0x00,0x00,0xC0,0x00,0x3C,0x00,
0x00,0x18,0x00,0x01,0x80,0x00,0x3C,0x00,0x00,0x1C,0x00,0x07,0x00,0x00,0x3C,0x00,
0x00,0x0E,0x00,0x1E,0x00,0x00,0x3C,0x00,0x00,0x07,0x80,0x7C,0x00,0x00,0x3C,0x00,
0x00,0x03,0xFF,0xF0,0x00,0x00,0x7C,0x00,0x00,0x01,0xFF,0xC0,0x00,0x00,0xFC,0x00,
0x00,0x00,0x3E,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x0F,0xC0,0x00,
0x00,0x03,0xFC,0x00,0x00,0x1F,0xE0,0x00,0x00,0x07,0xFC,0x00,0x00,0x1F,0xF0,0x00,
0x00,0x0C,0x38,0x00,0x00,0x06,0x18,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x0C,0x00,
0x00,0x18,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x04,0x00,
0x00,0x30,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x03,0x00,0x00,0x06,0x00,
0x00,0x30,0x00,0x03,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x03,0x00,0x00,0x06,0x00,
0x00,0x30,0x00,0x03,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x07,0x00,0x00,0x06,0x00,
0x00,0x18,0x00,0x05,0x80,0x00,0x04,0x00,0x00,0x18,0x00,0x0D,0x80,0x00,0x0C,0x00,
0x00,0x0C,0x00,0x18,0xC0,0x00,0x0C,0x00,0x00,0x0F,0x00,0x38,0xC0,0x00,0x18,0x00,
0x00,0x07,0xC1,0xF0,0x70,0x00,0x30,0x00,0x00,0x03,0xFF,0xE0,0x3C,0x00,0xF0,0x00,
0x00,0x00,0xFF,0x80,0x1F,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0x80,0x00,
0x00,0x00,0x00,0x00,0x01,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

#/*45   C3435 */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x00,0x00,
0x00,0x00,0x00,0x00,0x05,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x80,0x00,0x00,
0x00,0x00,0x00,0x00,0x21,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x41,0x80,0x00,0x00,
0x00,0x00,0x00,0x01,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x04,0x01,0x80,0x00,0x00,
0x00,0x00,0x00,0x08,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x20,0x01,0x80,0x00,0x00,
0x00,0x00,0x00,0x40,0x01,0x80,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x80,0x0C,0x00,
0x00,0x00,0x06,0x00,0x01,0x80,0x0C,0x00,0x00,0x00,0x08,0x00,0x01,0x80,0x0C,0x00,
0x00,0x00,0x20,0x00,0x01,0x80,0x0C,0x00,0x00,0x00,0x40,0x00,0x01,0x80,0x0C,0x00,
0x00,0x01,0x80,0x00,0x01,0x80,0x0C,0x00,0x00,0x03,0x80,0x00,0x01,0x80,0x1C,0x00,
0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFC,0x00,
0x00,0x00,0x00,0x00,0x01,0x80,0x1C,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x0C,0x00,
0x00,0x00,0x00,0x00,0x01,0x80,0x0C,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x0C,0x00,
0x00,0x00,0x00,0x00,0x01,0x80,0x0C,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x0C,0x00,
0x00,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xC0,0x00,
0x00,0x00,0x00,0x03,0xE0,0x3F,0xE0,0x00,0x00,0x1F,0xC0,0x00,0xC0,0x3F,0x30,0x00,
0x00,0x1E,0x00,0x00,0x80,0x0C,0x18,0x00,0x00,0x1E,0x00,0x03,0x00,0x00,0x08,0x00,
0x00,0x1E,0x00,0x06,0x00,0x00,0x0C,0x00,0x00,0x1E,0x00,0x06,0x00,0x00,0x04,0x00,
0x00,0x1E,0x00,0x0C,0x00,0x00,0x06,0x00,0x00,0x1E,0x00,0x0C,0x00,0x00,0x06,0x00,
0x00,0x1E,0x00,0x1C,0x00,0x00,0x06,0x00,0x00,0x1E,0x00,0x1C,0x00,0x00,0x06,0x00,
0x00,0x1E,0x00,0x1C,0x00,0x00,0x06,0x00,0x00,0x1E,0x00,0x1C,0x00,0x00,0x06,0x00,
0x00,0x1E,0x00,0x1C,0x00,0x00,0x06,0x00,0x00,0x1E,0x00,0x1C,0x00,0x00,0x0C,0x00,
0x00,0x1E,0x00,0x0E,0x00,0x00,0x0C,0x00,0x00,0x1E,0x00,0x0F,0x00,0x00,0x18,0x00,
0x00,0x1E,0x00,0x07,0x80,0x00,0x38,0x00,0x00,0x1E,0x00,0x03,0xE0,0x00,0xF0,0x00,
0x00,0x1E,0x00,0x01,0xFF,0xFF,0xC0,0x00,0x00,0x1E,0x00,0x00,0xFF,0xFF,0x80,0x00,
0x00,0x00,0x00,0x00,0x1F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

#/*67   C3637 */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x7F,0xFF,0xE0,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFC,0x00,0x00,
0x00,0x00,0x1F,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x7F,0x00,0xF0,0x1F,0xC0,0x00,
0x00,0x00,0xE0,0x00,0xC0,0x03,0xE0,0x00,0x00,0x03,0x80,0x01,0x00,0x00,0x70,0x00,
0x00,0x06,0x00,0x02,0x00,0x00,0x38,0x00,0x00,0x04,0x00,0x06,0x00,0x00,0x1C,0x00,
0x00,0x08,0x00,0x0C,0x00,0x00,0x0C,0x00,0x00,0x18,0x00,0x1C,0x00,0x00,0x0C,0x00,
0x00,0x10,0x00,0x18,0x00,0x00,0x06,0x00,0x00,0x10,0x00,0x38,0x00,0x00,0x06,0x00,
0x00,0x30,0x00,0x38,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x38,0x00,0x00,0x06,0x00,
0x00,0x30,0x00,0x38,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x38,0x00,0x00,0x04,0x00,
0x00,0x30,0x00,0x1C,0x00,0x00,0x0C,0x00,0x00,0x18,0x00,0x1C,0x00,0x00,0x0C,0x00,
0x00,0x1F,0xC0,0x1E,0x00,0x00,0x18,0x00,0x00,0x0F,0xE0,0x0F,0x00,0x00,0x30,0x00,
0x00,0x07,0xE0,0x07,0xC0,0x01,0xE0,0x00,0x00,0x01,0xC0,0x03,0xFF,0xFF,0xC0,0x00,
0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF8,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x1F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1E,0x00,0x00,0x00,0x03,0xFC,0x00,0x00,0x1E,0x00,0x00,0x00,0x7F,0xFE,0x00,
0x00,0x1E,0x00,0x00,0x03,0xFF,0xFE,0x00,0x00,0x1E,0x00,0x00,0x1F,0xFF,0xFC,0x00,
0x00,0x1E,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x1E,0x00,0x01,0xE0,0x00,0x00,0x00,
0x00,0x1E,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x1E,0x00,0x38,0x00,0x00,0x00,0x00,
0x00,0x1E,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x1E,0x01,0x00,0x00,0x00,0x00,0x00,
0x00,0x1E,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x10,0x00,0x00,0x00,0x00,0x00,
0x00,0x1E,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

#/*89   C3839 */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0xFF,0x00,0x00,0x00,0x00,0xFF,0x80,0x07,0xFF,0xC0,0x00,
0x00,0x03,0xFF,0xE0,0x1E,0x00,0xE0,0x00,0x00,0x07,0x01,0xF0,0x38,0x00,0x30,0x00,
0x00,0x0E,0x00,0xF8,0x60,0x00,0x18,0x00,0x00,0x0C,0x00,0x7C,0x40,0x00,0x08,0x00,
0x00,0x18,0x00,0x3C,0x80,0x00,0x0C,0x00,0x00,0x18,0x00,0x1F,0x00,0x00,0x04,0x00,
0x00,0x10,0x00,0x0F,0x00,0x00,0x06,0x00,0x00,0x30,0x00,0x0F,0x00,0x00,0x06,0x00,
0x00,0x30,0x00,0x07,0x80,0x00,0x06,0x00,0x00,0x30,0x00,0x07,0x80,0x00,0x06,0x00,
0x00,0x30,0x00,0x03,0xC0,0x00,0x06,0x00,0x00,0x30,0x00,0x03,0xC0,0x00,0x06,0x00,
0x00,0x30,0x00,0x03,0xE0,0x00,0x06,0x00,0x00,0x10,0x00,0x03,0xE0,0x00,0x04,0x00,
0x00,0x18,0x00,0x04,0xF0,0x00,0x0C,0x00,0x00,0x18,0x00,0x0C,0x78,0x00,0x08,0x00,
0x00,0x0C,0x00,0x08,0x7C,0x00,0x18,0x00,0x00,0x06,0x00,0x30,0x3E,0x00,0x30,0x00,
0x00,0x03,0xC0,0xE0,0x1F,0x80,0xE0,0x00,0x00,0x01,0xFF,0xC0,0x07,0xFF,0xC0,0x00,
0x00,0x00,0x7F,0x00,0x01,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x3F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x80,0x00,0x00,0x00,
0x00,0x03,0xF0,0x1F,0xE0,0x01,0xF0,0x00,0x00,0x07,0x80,0x01,0xF0,0x03,0xF8,0x00,
0x00,0x0E,0x00,0x00,0xF0,0x03,0xFC,0x00,0x00,0x0C,0x00,0x00,0x78,0x00,0x3C,0x00,
0x00,0x18,0x00,0x00,0x38,0x00,0x06,0x00,0x00,0x18,0x00,0x00,0x1C,0x00,0x06,0x00,
0x00,0x30,0x00,0x00,0x1C,0x00,0x06,0x00,0x00,0x30,0x00,0x00,0x1C,0x00,0x06,0x00,
0x00,0x30,0x00,0x00,0x1C,0x00,0x06,0x00,0x00,0x30,0x00,0x00,0x1C,0x00,0x06,0x00,
0x00,0x30,0x00,0x00,0x18,0x00,0x04,0x00,0x00,0x30,0x00,0x00,0x18,0x00,0x0C,0x00,
0x00,0x10,0x00,0x00,0x30,0x00,0x18,0x00,0x00,0x18,0x00,0x00,0x30,0x00,0x38,0x00,
0x00,0x08,0x00,0x00,0x60,0x00,0x70,0x00,0x00,0x0C,0x00,0x00,0xC0,0x01,0xE0,0x00,
0x00,0x07,0x00,0x01,0x00,0x07,0xC0,0x00,0x00,0x03,0xC0,0x06,0x00,0x7F,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xF0,0x00,0x00,
0x00,0x00,0x0F,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x7F,0xE0,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

#/* :   C203A */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0xFC,0x00,
0x00,0x00,0x00,0xFF,0x00,0x01,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0x01,0xFE,0x00,
0x00,0x00,0x00,0xFF,0x00,0x01,0xFE,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0xFC,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

#/*//   C2F2F */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,
0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,
0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,
0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,
0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

#/*们   CC3C7 */

]
##################
#颜色 位置等参数值#
##################
m_h_s1 =0xC8
m_h_e1 =0x4C8
m_v_s1 =0xc8
m_v_e1 =0x148
m_h_s2 =0x4c9
m_h_e2 =0x8c9
m_v_s2 =0x320
m_v_e2 =0x3a0
m_v_size =0
m_radio  =1
m_char_color =0x3e8
m_char_color2 =0x1f4
m_back_color =0x3e8
m_back_color2 =0x1f4
###############################

file_length = len(file_buffer)
print file_length
id = int(5)
#######################
#操作低层flash类以及相关方法
#######################
class CON_FLASH():
      def rev_data(self):
          #data = ser.read(1)
         # rx.append(data)
          pass
      def Txdata(self): #发送函数
          addr_id = []
          addr_id2 = []
          addr_id.append(0xAA)
          addr_id.append(0x55)
          addr_id.append(4+tx[200])
          addr_id.append(id)
          for i in range(0,4):
              ser.write(chr(addr_id[i]))
          ttk =int(0)
          ttk2 = tx[0]
          for i in range(0,tx[200]):
              ttk = ttk + tx[i]
              ser.write(chr(tx[i]))
              if(i<=(tx[200]-2)):
                 ttk2 = ttk2^tx[i+1]
          addr_id2.append(ttk2)
          addr_id2.append((ttk+ttk2)/256)
          addr_id2.append((ttk+ttk2)%256)
          for i in range(0,3):
              ser.write(chr(addr_id2[i]))
          
          
      def flash_cmd(self,b1,b2,b3,b4,b5,b6): #擦除扇区
          i=int(0)
          tx[i]=0xf1
          i=i+1
          tx[i]=b1
          i=i+1
          tx[i]=b2
          i=i+1
          tx[i]=b3
          i=i+1
          tx[i]=b4
          i=i+1
          tx[i]=b5
          i=i+1
          tx[i]=b6
          i=i+1
          tx[200]=i
         # print tx
          #print tx[200]
          self.Txdata()
          
          return 1
      def flash_wr(self,adr1,adr2,b0,b1,b2,b3,b4,b5,b6,b7): #发送点阵字库
          ser.flushInput()
          
          count_rx = int(0)
          i=int(0)
          tx[i]=0xf4
          i=i+1
          tx[i]=0x55
          i=i+1
          tx[i]=0xaa
          i=i+1
          tx[i]=adr1
          i=i+1
          tx[i]=adr2
          i=i+1
          tx[i]=b0
          i=i+1
          tx[i]=b1
          i=i+1
          tx[i]=b2
          i=i+1
          tx[i]=b3
          i=i+1
          tx[i]=b4
          i=i+1
          tx[i]=b5
          i=i+1
          tx[i]=b6
          i=i+1
          tx[i]=b7
          i=i+1
          tx[200]=i
          self.Txdata()
         
          time.sleep(0.01)
          for i in range(0,30):
              data = ser.read(1)
          #    print "data=",data
              if data:
                     rx[count_rx]=ord(data)
                     count_rx = count_rx+1
              if(count_rx>=15):
                 break
              time.sleep(0.01)
          if(count_rx<15):
             return 0             
          print "rx=",rx[4:12]
          print "tx=",tx[5:13]
          print "count_rx=",count_rx
          #验证返回数据是否正确
          if(count_rx>=8 and rx[0]==0xaa and rx[1]==0xcc and rx[4]==b0 and rx[5]==b1 and rx[6]==b2 and rx[7]==b3 and rx[8]==b4 and rx[9]==b5 and rx[10]==b6 and rx[11] == b7):
            count_rx =int(0)
            
            return 1
          else:
            count_rx = int(0)
              
            return 0
      def file_wr(self):#烧写点阵字库
          
          self.flash_cmd(0x50,0x00,0x00,0x00,0x00,1) #使能写状态寄存器
	  time.sleep(0.2)
          self.flash_cmd(0x01,0x02,0x00,0x00,0x00,2) #写状态寄存器
          time.sleep(0.2)
          self.flash_cmd(0x06,0x00,0x00,0x00,0x00,1) #ren
          time.sleep(0.2)
          self.flash_cmd(0x20,0x00,0x00,0x00,0x00,4) #erase sec0
          time.sleep(0.2)
	  print "erase 0"	

	  self.flash_cmd(0x50,0x00,0x00,0x00,0x00,1)  #使能写状态寄存器
          time.sleep(0.2)
          self.flash_cmd(0x01,0x02,0x00,0x00,0x00,2) #写状态寄存器
          time.sleep(0.2)
          self.flash_cmd(0x06,0x00,0x00,0x00,0x00,1) #wren
          time.sleep(0.2)
          self.flash_cmd(0x20,0x00,0x10,0x00,0x00,4) #erase sec1
          time.sleep(0.2)
          print "erase 1"
          self.flash_cmd(0x50,0x00,0x00,0x00,0x00,1) #使能写状态寄存器
          time.sleep(0.2)
	  self.flash_cmd(0x01,0x02,0x00,0x00,0x00,2) #写状态寄存器
          time.sleep(0.2)
	  self.flash_cmd(0x06,0x00,0x00,0x00,0x00,1) #wren
          time.sleep(0.2)
          self.flash_cmd(0x20,0x00,0x20,0x00,0x00,4) #erase sec2
	  time.sleep(0.2)

          print "erase 2"
          self.flash_cmd(0x50,0x00,0x00,0x00,0x00,1)  #使能写状态寄存器
          time.sleep(0.2)
	  self.flash_cmd(0x01,0x02,0x00,0x00,0x00,2) #写状态寄存器
          time.sleep(0.2)
	  self.flash_cmd(0x06,0x00,0x00,0x00,0x00,1)  #wren
          time.sleep(0.2)
          self. flash_cmd(0x20,0x00,0x30,0x00,0x00,4) #erase sec3
          time.sleep(0.2)
          print 'erase 3'
          
          for i in range(0,file_length/8):
              x= int(0)
              print "seq=",i
              while(True):
                  x=x+1
                  ok = self.flash_wr((i*8)/256,(i*8)%256,file_buffer[i*8+0],file_buffer[i*8+1],file_buffer[i*8+2],
                                                  file_buffer[i*8+3],file_buffer[i*8+4],file_buffer[i*8+5],
                                                  file_buffer[i*8+6],file_buffer[i*8+7])
                  print "ok=",ok
                  if(ok==1):
                     break
                  else:
                     time.sleep(x*0.01)
                     if(x>=20):
                       break
         
          print "succeed! bye--bye点阵列文件全部发送成功\n"     
      def save(self,adr,data): #保存区域 255 0x00
          i=int(0)
          tx[i] = 0xc2
          i=i+1
          tx[i] = adr/256
          i=i+1
          tx[i] = adr%256
          i=i+1
          tx[i]=data/256
          i=i+1
          tx[i]=data%256
          i=i+1
          tx[200]=i
          self.Txdata()
          return 1 
      def save_end(self): # 保存方法 包括字位置 颜色等
          
         self.flash_cmd(0x50,0x00,0x00,0x00,0x00,1) #使能写状态寄存器
         time.sleep(0.2)
         self.flash_cmd(0x01,0x02,0x00,0x00,0x00,2) #写状态寄存器
         time.sleep(0.2)
         self.flash_cmd(0x06,0x00,0x00,0x00,0x00,1) #wren
         time.sleep(0.2)
	 self.flash_cmd(0x20,0x00,0x40,0x00,0x00,4) #erase sec4
         time.sleep(0.2)
         
	 dd[0]=  m_h_s1/256
	 dd[1]=  m_h_s1%256

	 dd[2]= m_h_e1/256
	 dd[3]= m_h_e1%256

	 dd[4] =  m_v_s1/256
	 dd[5] = m_v_s1%256

	 dd[6]=  m_v_e1/256 
	 dd[7]=  m_v_e1%256 

	 dd[8]=m_h_s2/256 
	 dd[9]=m_h_s2%256

	 dd[10]=  m_h_e2/256 
	 dd[11]=  m_h_e2%256 
	  
	 dd[12]=m_v_s2/256 
	 dd[13]=m_v_s2%256 

	 dd[14]= m_v_e2/256
	 dd[15]= m_v_e2%256

	 dd[16]= m_v_size/256  
	 dd[17]= m_v_size%256 

	 dd[18]=  m_radio/256   
	 dd[19]=  m_radio%256 	


	 dd[20]=((m_char_color*1024+m_char_color2)/255/255)/256 
	 dd[21]=((m_char_color*1024+m_char_color2)/255/255)%256 

	 dd[22]=( (m_char_color*1024+m_char_color2)%(256*256))/256 
	 dd[23]= ( (m_char_color*1024+m_char_color2)%(256*256))%256	

	 dd[24]= ((m_back_color*1024+m_back_color2)/256/256)/256
	 dd[25]= ((m_back_color*1024+m_back_color2)/256/256)%256

	 dd[26]=((m_back_color*1024+m_back_color2)%(256*256))/256 
	 dd[27]= ((m_back_color*1024+m_back_color2)%(256*256))%256
         global save_data_sec4   
         for i in range(0,28):
	     save_data_sec4.append(dd[i])
		 
	 
	 for i in range(0,4):
             for j in range(0,64):
		  save_data_sec4.append(char_data[i][j])
		 
	 print "char_data=",char_data
	 save_data_sec4.append(0xaa)
         for i in range(0,3):
             save_data_sec4.append(0)
         print "len=",len(save_data_sec4)
        
         #assert()
         for i in range(0,36):
		x=0
		while True:
                      x=x+1
			#//////烧写命令，一次烧写8个字节，并把结果反读出来
		      ok=self.flash_wr(0x40+(i*8)/256,(i*8)%256,save_data_sec4[i*8+0],											save_data_sec4[i*8+1],								                                          save_data_sec4[i*8+2],										                    save_data_sec4[i*8+3],										                      save_data_sec4[i*8+4],										                        save_data_sec4[i*8+5],										                          save_data_sec4[i*8+6],										                    save_data_sec4[i*8+7])
                      if(ok==1):
                         break
                      else:
                         time.sleep(x*0.01)
                         if(x>=20):
                            break          
         print "保存命令区域成功"
         save_data_sec4 = []
      def reset(self):      #重启命令
          self.save(44,44)
          print "重启成功"
      def play_flash_cmd(self,ad,char_data):   #修改字符地址方法
          i =int(0)
          tx[i] = 0xd0
          i=i+1
          tx[i] = 0x12
          i=i+1
          tx[i] = 0x34
          i=i+1
          tx[i] = ad
          i=i+1
          tx[20] = i
          self.Txdata()
          
          for i in range(0,64):
              tx[i] = char_data[ad][i]
          tx[200]=i
          self.Txdata()
          time.sleep(0.1)
          
          return 1
     
          
      def play_flash_cmd_end(self):
          for i in range(0,4):
              play_flash_cmd(i,char_data)
          print "更新命令字发送成功"
          return 1
          
      def tt4(self):
          pass
      def tt5(self):
          pass
      def tt6(self):
          pass
      def tt7(self):
          pass
#tt = CON_FLASH()
#tt.file_wr() 
#time.sleep(0.2)
#tt.save_end()
#time.sleep(2)
#tt.reset()
